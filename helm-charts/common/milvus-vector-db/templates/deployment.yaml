---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    helm.sh/chart: {{ .Values.etcd.name }}-{{ .Chart.AppVersion }}
    app.kubernetes.io/name: {{ .Values.etcd.name }}
    app.kubernetes.io/instance: {{ .Values.etcd.name }}
    app.kubernetes.io/version: {{ (split ":" .Values.etcd.image)._1 }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  name: {{ .Values.etcd.name }}
spec:
  replicas: {{ .Values.etcd.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.etcd.name }}
      app.kubernetes.io/instance: {{ .Values.etcd.name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.etcd.name }}
        app.kubernetes.io/instance: {{ .Values.etcd.name }}
    spec:
      containers:
        - args:
            - etcd
            - -advertise-client-urls=http://127.0.0.1:{{ .Values.etcd.service.port }}
            - -listen-client-urls
            - http://0.0.0.0:{{ .Values.etcd.service.port }}
            - -listen-peer-urls=http://127.0.0.1:{{ .Values.etcd.service.peerPort }}
            - --data-dir
            - /etcd
          env:
            - name: ETCD_AUTO_COMPACTION_MODE
              value: revision
            - name: ETCD_AUTO_COMPACTION_RETENTION
              value: "1000"
            - name: ETCD_QUOTA_BACKEND_BYTES
              value: "4294967296"
            - name: ETCD_SNAPSHOT_COUNT
              value: "50000"
          image: quay.io/coreos/etcd:v3.5.5
          volumeMounts:
            - mountPath: /etcd
              name: etcd-volume
          livenessProbe:
            exec:
              command:
                - etcdctl
                - endpoint
                - health
                - --endpoints=127.0.0.1:{{ .Values.etcd.service.port }}
            failureThreshold: 3
            periodSeconds: 30
            timeoutSeconds: 20
          name: {{ .Values.etcd.name }}
          ports:
            - containerPort: {{ .Values.etcd.service.port }}
              protocol: TCP
      volumes:
        - name: etcd-volume
          emptyDir: {}
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    helm.sh/chart: {{ .Values.minio.name }}-{{ .Chart.AppVersion }}
    app.kubernetes.io/name: {{ .Values.minio.name }}
    app.kubernetes.io/instance: {{ .Values.minio.name }}
    app.kubernetes.io/version: {{ (split ":" .Values.minio.image)._1 }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  name: {{ .Values.minio.name }}
spec:
  replicas: {{ .Values.minio.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.minio.name }}
      app.kubernetes.io/instance: {{ .Values.minio.name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.minio.name }}
        app.kubernetes.io/instance: {{ .Values.minio.name }}
    spec:
      containers:
        - args:
            - minio
            - server
            - /minio_data
            - --console-address
            - :{{ .Values.minio.service.consolePort }}
          env:
            - name: MINIO_ACCESS_KEY
              value: {{ .Values.minio.accessKey }}
            - name: MINIO_SECRET_KEY
              value: {{ .Values.minio.secretKey }}
          image: {{ .Values.minio.image }}
          volumeMounts:
            - mountPath: /minio_data
              name: minio-volume
          livenessProbe:
            exec:
              command:
                - curl
                - -f
                - http://localhost:{{ .Values.minio.service.port }}/minio/health/live
            failureThreshold: 3
            periodSeconds: 30
            timeoutSeconds: 20
          name: {{ .Values.minio.name }}
          ports:
            - containerPort: {{ .Values.minio.service.consolePort }}
              protocol: TCP
            - containerPort: {{ .Values.minio.service.port }}
              protocol: TCP
      volumes:
        - name: minio-volume
          emptyDir: {}
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "milvus-vector-db.labels" . | nindent 4 }}
  name: {{ include "milvus-vector-db.fullname" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "milvus-vector-db.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "milvus-vector-db.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - args:
            - milvus
            - run
            - standalone
          env:
            - name: ETCD_ENDPOINTS
              value: {{ .Values.etcd.name }}:{{ .Values.etcd.service.port }}
            - name: MINIO_ADDRESS
              value: {{ .Values.minio.name }}:{{ .Values.minio.service.port }}
          image: {{ .Values.image }}
          volumeMounts:
            - mountPath: /var/lib/milvus
              name: milvus-volume
          livenessProbe:
            exec:
              command:
                - curl
                - -f
                - http://localhost:{{ .Values.service.apiPort }}/healthz
            failureThreshold: 3
            initialDelaySeconds: 90
            periodSeconds: 30
            timeoutSeconds: 20
          name: {{ .Chart.Name }}
          ports:
            - containerPort: {{ .Values.service.grpcPort }}
              protocol: TCP
            - containerPort: {{ .Values.service.apiPort }}
              protocol: TCP
      volumes:
        - name: milvus-volume
          emptyDir: {}
      restartPolicy: Always
